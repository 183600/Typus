package main

import "fmt"

// Simple vector example
type Vector struct {
    length int
    data   []float64
}

func NewVector(length int, data []float64) *Vector {
    if len(data) != length {
        panic("Vector data length doesn't match dimension")
    }
    return &Vector{length: length, data: data}
}

func (v *Vector) Get(index int) float64 {
    if index < 0 || index >= v.length {
        panic("Vector index out of bounds")
    }
    return v.data[index]
}

func main() {
    fmt.Println("=== 简单向量测试 ===")
    
    // Create a vector with length 3
    data := []float64{1.0, 2.0, 3.0}
    vec := NewVector(3, data)
    
    fmt.Printf("Vector length: %d\n", vec.length)
    fmt.Printf("Vector[0]: %.1f\n", vec.Get(0))
    fmt.Printf("Vector[1]: %.1f\n", vec.Get(1))
    fmt.Printf("Vector[2]: %.1f\n", vec.Get(2))
    
    fmt.Println("向量测试完成")
}
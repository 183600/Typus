package main

import (
    "microservice_structure/user_service"
    "microservice_structure/order_service"
    "microservice_structure/notification_service"
    "microservice_structure/gateway"
    "fmt"
    "time"
)

func main() {
    // Initialize services
    userSrv := user_service.NewUserService()
    orderSrv := order_service.NewOrderService()
    notifSrv := notification_service.NewNotificationService()

    // Create API gateway
    gw := gateway.NewGateway(userSrv, orderSrv, notifSrv)

    // Test microservice communication
    fmt.Println("=== Testing Microservice Architecture ===")

    // Create user through gateway
    user, err := gw.CreateUser("john_doe", "john@example.com")
    if err != nil {
        fmt.Printf("Error creating user: %v\n", err)
        return
    }
    fmt.Printf("Created user: %s\n", user.Name)

    // Create order through gateway
    order, err := gw.CreateOrder(user.ID, "product_123", 2)
    if err != nil {
        fmt.Printf("Error creating order: %v\n", err)
        return
    }
    fmt.Printf("Created order: %s\n", order.ID)

    // Test inter-service communication
    err = gw.ProcessOrder(order.ID)
    if err != nil {
        fmt.Printf("Error processing order: %v\n", err)
        return
    }
    fmt.Printf("Order processed successfully\n")

    // Test ownership patterns in microservice context
    testMicroserviceOwnership(userSrv, orderSrv)
}

func testMicroserviceOwnership(userSrv *user_service.UserService, orderSrv *order_service.OrderService) {
    // Test service ownership transfer
    transferredUserService := transferUserService(userSrv)
    transferredOrderService := transferOrderService(orderSrv)

    fmt.Printf("Transferred user service: %v\n", transferredUserService != nil)
    fmt.Printf("Transferred order service: %v\n", transferredOrderService != nil)
}

func transferUserService(service *user_service.UserService) *user_service.UserService {
    // Simulate service ownership transfer
    return service
}

func transferOrderService(service *order_service.OrderService) *order_service.OrderService {
    // Simulate service ownership transfer
    return service
}